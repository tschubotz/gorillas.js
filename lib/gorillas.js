// Generated by CoffeeScript 1.6.2
(function() {
  var Gorilla, GorillasGame, Renderer, Tree, canvas, context, d, g, r;

  canvas = null;

  context = null;

  d = $(document);

  g = null;

  r = null;

  d.ready(function() {
    g = new GorillasGame;
    r = new Renderer;
    return r.animate();
  });

  Tree = (function() {
    function Tree(x, y, image) {
      this.x = x;
      this.y = y;
      this.image = image;
      context.drawImage(this.image, this.x, this.y, 100, 300);
    }

    return Tree;

  })();

  Gorilla = (function() {
    function Gorilla(x, y, image) {
      this.x = x;
      this.y = y;
      this.image = image;
      context.drawImage(this.image, this.x, this.y, 72, 72);
      context.beginPath();
      context.moveTo(this.x + 36, this.y);
      context.lineTo(this.x + 36, this.y - 100);
      context.stroke();
    }

    return Gorilla;

  })();

  GorillasGame = (function() {
    function GorillasGame() {
      canvas = $("#viewport")[0];
      context = canvas.getContext("2d");
      this.trees = [];
      this.left_gorilla = null;
      this.right_gorilla = null;
      this.images = {
        num_loaded: 0
      };
      d.on("image_loaded", function() {
        g.images.num_loaded += 1;
        if (g.images.num_loaded === (Object.keys(g.images).length - 1)) {
          return g.setUpStage();
        }
      });
      this.loadImages();
    }

    GorillasGame.prototype.loadImages = function() {
      this.images.tree = new Image();
      this.images.tree.onload = function() {
        return d.trigger("image_loaded");
      };
      this.images.tree.src = 'img/tree.png';
      this.images.left_gorilla = new Image();
      this.images.left_gorilla.onload = function() {
        return d.trigger("image_loaded");
      };
      this.images.left_gorilla.src = 'img/gorillaFacingRight.png';
      this.images.right_gorilla = new Image();
      this.images.right_gorilla.onload = function() {
        return d.trigger("image_loaded");
      };
      return this.images.right_gorilla.src = 'img/gorillaFacingLeft.png';
    };

    GorillasGame.prototype.setUpStage = function() {
      this.setUpTrees();
      return this.setUpGorillas();
    };

    GorillasGame.prototype.setUpTrees = function() {
      var i, x, y, _i, _results;

      _results = [];
      for (i = _i = 0; _i <= 7; i = ++_i) {
        x = i * 100;
        y = 300 + (200 * Math.random());
        _results.push(this.trees.push(new Tree(x, y, this.images.tree)));
      }
      return _results;
    };

    GorillasGame.prototype.setUpGorillas = function() {
      this.left_gorilla = new Gorilla(this.trees[0].x + 14, this.trees[0].y - 72, this.images.left_gorilla);
      return this.lright_gorilla = new Gorilla(this.trees[7].x + 14, this.trees[7].y - 72, this.images.right_gorilla);
    };

    return GorillasGame;

  })();

  Renderer = (function() {
    function Renderer() {
      window.requestAnimFrame = (function() {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback, element) {
          return window.setTimeout(callback, 1000 / 60)();
        };
      })();
    }

    Renderer.prototype.draw = function() {};

    Renderer.prototype.animate = function() {
      window.requestAnimFrame(r.animate);
      return r.draw();
    };

    return Renderer;

  })();

}).call(this);
